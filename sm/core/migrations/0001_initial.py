# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
import sm.core.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(unique=True, max_length=255)),
                ('product_type', models.CharField(max_length=255, null=True, blank=True)),
                ('default', models.BooleanField(default=False)),
                ('oid', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'sm_catalog',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', sm.core.models.LowerCaseCharField(unique=True, max_length=255)),
                ('org_name', models.CharField(max_length=1023, null=True, blank=True)),
                ('type', models.CharField(default=b'CUSTOMER', max_length=31, choices=[(b'CUSTOMER', 'Customer'), (b'GOOGLE_CUSTOMER', 'Google customer'), (b'RESELLER', 'Reseller'), (b'RESOLD_CUSTOMER', 'Resold customer')])),
                ('currency', models.CharField(default=b'USD', max_length=31)),
                ('offline', models.BooleanField(default=False)),
                ('tax', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('balance', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('reseller', models.ForeignKey(related_name='customers', blank=True, to='core.Customer', null=True)),
            ],
            options={
                'db_table': 'sm_customer',
            },
        ),
        migrations.CreateModel(
            name='Financial',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('currency', models.CharField(default=b'USD', max_length=31)),
                ('total_paid', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('total_invoiced', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('balance', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('status', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_id', models.CharField(max_length=255, null=True, blank=True)),
                ('bank_transaction_id', models.CharField(max_length=255, null=True, blank=True)),
                ('bank_authroization_id', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_description', models.TextField(null=True, blank=True)),
                ('payment_amount', models.DecimalField(null=True, max_digits=10, decimal_places=2, blank=True)),
                ('customer', models.ForeignKey(to='core.Customer')),
            ],
            options={
                'db_table': 'sm_financial',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('conditions', models.TextField(null=True, blank=True)),
                ('terms', models.TextField(null=True, blank=True)),
                ('due_date', models.DateTimeField()),
                ('currency', models.CharField(default=b'USD', max_length=31)),
                ('sub_total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('discount', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('tax', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('amount_paid', models.DecimalField(max_digits=10, decimal_places=2)),
                ('balance', models.DecimalField(max_digits=10, decimal_places=2)),
                ('status', models.CharField(default=b'OPEN', max_length=31, choices=[(b'CANCELLED', 'Cancelled'), (b'OPEN', 'Open'), (b'OVERDUE', 'OVERDUE'), (b'PAID', 'Paid'), (b'PARTIALLY_PAID', 'Partially paid')])),
                ('customer', models.ForeignKey(to='core.Customer')),
            ],
            options={
                'db_table': 'sm_invoice',
            },
        ),
        migrations.CreateModel(
            name='InvoiceDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('start_date', models.DateTimeField(null=True, blank=True)),
                ('end_date', models.DateTimeField(null=True, blank=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('unit_price', models.DecimalField(max_digits=10, decimal_places=2)),
                ('amount', models.IntegerField(default=1)),
                ('sub_total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('discount', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('invoice', models.ForeignKey(related_name='details', to='core.Invoice')),
            ],
            options={
                'db_table': 'sm_invoice_detail',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('conditions', models.TextField(null=True, blank=True)),
                ('terms', models.TextField(null=True, blank=True)),
                ('due_date', models.DateTimeField(auto_now_add=True)),
                ('currency', models.CharField(default=b'USD', max_length=31)),
                ('discount', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('tax', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('status', models.CharField(default=b'OPEN', max_length=31, choices=[(b'APPROVED', 'Approved'), (b'CANCELLED', 'Cancelled'), (b'DELIVERED', 'Delivered'), (b'INVOICE_SENT', 'Invoice sent'), (b'OPEN', 'Open'), (b'PAID', 'Paid')])),
                ('customer', models.ForeignKey(to='core.Customer')),
            ],
            options={
                'db_table': 'sm_order',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.TextField(null=True, blank=True)),
                ('unit_price', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('amount', models.IntegerField(default=1)),
                ('sub_total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('discount', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('catalog', models.ForeignKey(related_name='order_details', to='core.Catalog')),
                ('order', models.ForeignKey(related_name='details', to='core.Order')),
            ],
            options={
                'db_table': 'sm_order_detail',
            },
        ),
        migrations.CreateModel(
            name='PaypalBillingPlan',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('paypal_id', models.CharField(max_length=255, verbose_name=b'Plan id')),
            ],
            options={
                'db_table': 'sm_paypal_billing_plan',
            },
        ),
        migrations.CreateModel(
            name='PaypalTransaction',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('profile_id', models.CharField(max_length=63)),
                ('txn_id', models.CharField(max_length=63, null=True, blank=True)),
                ('payment_time', models.DateTimeField()),
                ('order', models.ForeignKey(to='core.Order')),
            ],
            options={
                'db_table': 'sm_paypal_transaction',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(unique=True, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('french_name', models.CharField(max_length=255, null=True, blank=True)),
                ('display_name', models.CharField(max_length=255, null=True, blank=True)),
                ('purchase_price', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('list_price', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('vendor', models.CharField(max_length=255, null=True, blank=True)),
                ('version', models.CharField(default=b'FREE', max_length=31, choices=[(b'BASIC', 'Basic version'), (b'ENTERPRISE', 'Enterprise version'), (b'FREE', 'Free version'), (b'PRO', 'Professional version')])),
                ('plan', models.CharField(blank=True, max_length=31, null=True, choices=[(b'ANNUAL_MONTHLY', b'Annual monthly'), (b'ANNUAL_YEARLY', b'Annual yearly'), (b'FLEX', b'Flex'), (b'FLEX_PREPAID', b'Flex prepaid')])),
                ('type', models.CharField(default=b'SUBSCRIPTION', max_length=31, choices=[(b'ONE_SHOT', 'One-shot'), (b'SUBSCRIPTION', 'Subscription')])),
                ('tier_number', models.IntegerField(default=-1)),
                ('tier_name', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'db_table': 'sm_product',
            },
        ),
        migrations.CreateModel(
            name='ProductCatalog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('price', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('catalog', models.ForeignKey(to='core.Catalog')),
                ('product', models.ForeignKey(to='core.Product')),
            ],
            options={
                'db_table': 'sm_product_catalog',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('address', models.TextField(null=True, blank=True)),
                ('city', models.CharField(max_length=255, null=True, blank=True)),
                ('state', models.CharField(max_length=255, null=True, blank=True)),
                ('country', models.CharField(max_length=255, null=True, blank=True)),
                ('zip_code', models.CharField(max_length=255, null=True, blank=True)),
                ('customer', models.ForeignKey(related_name='profile_set', to='core.Customer')),
            ],
            options={
                'db_table': 'sm_profile',
            },
            bases=(models.Model, sm.core.models.CustomerNameMixIn),
        ),
        migrations.CreateModel(
            name='ProfileClazz',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('product_clazz', models.CharField(max_length=31)),
                ('profile', models.ForeignKey(to='core.Profile')),
            ],
            options={
                'db_table': 'sm_profile_clazz',
            },
        ),
        migrations.CreateModel(
            name='PromotionCode',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(unique=True, max_length=255)),
                ('start_at', models.DateTimeField(auto_now_add=True)),
                ('end_at', models.DateTimeField(null=True, blank=True)),
                ('catalog', models.ForeignKey(related_name='promotion_codes', to='core.Catalog')),
            ],
            options={
                'db_table': 'sm_promotion_code',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=511)),
                ('trial', models.BooleanField(default=True)),
                ('domain', models.CharField(max_length=255, null=True, blank=True)),
                ('payment_method', models.CharField(default=b'PAYPAL_AUTO', max_length=63, choices=[(b'OFFLINE', 'Offline'), (b'PAYPAL_AUTO', 'Paypal auto'), (b'PAYPAL_MANUAL', 'Paypal manual'), (b'PAYPAL_PREAPPROVED', 'Paypal preapproved')])),
                ('trusted', models.BooleanField(default=False)),
                ('status', models.CharField(default=b'ACTIVE', max_length=31, choices=[(b'ACTIVE', 'Active'), (b'INACTIVE', 'Inactive')])),
                ('max_cap', models.IntegerField(null=True, blank=True)),
                ('currency', models.CharField(default=b'USD', max_length=31)),
                ('saw_price', models.BooleanField(default=True)),
                ('install_date', models.DateTimeField(auto_now_add=True)),
                ('start_plan_date', models.DateTimeField(null=True, blank=True)),
                ('plan', models.CharField(default=b'ANNUAL_YEARLY', max_length=31, choices=[(b'ANNUAL_MONTHLY', b'Annual monthly'), (b'ANNUAL_YEARLY', b'Annual yearly'), (b'FLEX', b'Flex'), (b'FLEX_PREPAID', b'Flex prepaid')])),
                ('renewal_option', models.CharField(default=b'CANCEL', max_length=31, choices=[(b'CANCEL', 'Cancel'), (b'FLEX', 'Flex'), (b'REDUCE', 'Reduce'), (b'RENEW', 'Renew')])),
                ('expiry_date', models.DateTimeField()),
                ('next_invoice_date', models.DateTimeField(null=True, blank=True)),
                ('billable_licenses', models.IntegerField()),
                ('vendor_licenses', models.IntegerField()),
                ('vendor_status', models.CharField(default=b'EVAL', max_length=31, choices=[(b'EVAL', b'EVAL'), (b'EXPIRED', b'EXPIRED'), (b'EXPIRED_EVAL', b'EXPIRED_EVAL'), (b'EXPIRED_PAID', b'EXPIRED_PAID'), (b'PAID', b'PAID'), (b'UNINSTALLED_EVAL', b'UNINSTALLED_EVAL'), (b'UNINSTALLED_EXPIRED', b'UNINSTALLED_EXPIRED'), (b'UNINSTALLED_PAID', b'UNINSTALLED_PAID')])),
                ('sync_with_vendor', models.BooleanField(default=False)),
                ('vendor_trial', models.BooleanField(default=False)),
                ('vendor_plan', models.CharField(default=b'ANNUAL_YEARLY', max_length=31, choices=[(b'ANNUAL_MONTHLY', b'Annual monthly'), (b'ANNUAL_YEARLY', b'Annual yearly'), (b'FLEX', b'Flex'), (b'FLEX_PREPAID', b'Flex prepaid')])),
                ('vendor_version', models.CharField(max_length=63, null=True, blank=True)),
                ('vendor_renewal_option', models.CharField(max_length=63, null=True, blank=True)),
                ('vendor_renewal_data', models.DateTimeField(null=True, blank=True)),
                ('vendor_creation_date', models.DateTimeField(null=True, blank=True)),
                ('vendor_max_cap', models.IntegerField(null=True, blank=True)),
                ('bank_auth_id', models.CharField(max_length=255, null=True, verbose_name=b'Bank Authorization ID', blank=True)),
                ('catalog', models.ForeignKey(to='core.Catalog')),
                ('customer', models.ForeignKey(to='core.Customer')),
                ('invoiced_customer', models.ForeignKey(related_name='invoiced_subscriptions', blank=True, to='core.Customer', null=True)),
                ('order', models.ForeignKey(blank=True, to='core.Order', null=True)),
                ('product', models.ForeignKey(to='core.Product')),
                ('vendor_product', models.ForeignKey(related_name='buyer_subscription_set', blank=True, to='core.Product', null=True)),
                ('vendor_subscription', models.ForeignKey(related_name='buyer_subscription_set', blank=True, to='core.Subscription', null=True)),
            ],
            options={
                'db_table': 'sm_subscription',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
                ('email', sm.core.models.LowerCaseCharField(max_length=255)),
                ('contact_email', sm.core.models.LowerCaseCharField(max_length=255, null=True, blank=True)),
                ('phone_number', models.CharField(max_length=255, null=True, blank=True)),
                ('function', models.CharField(max_length=25, null=True, blank=True)),
                ('role', models.CharField(default=b'BUYER', max_length=31, choices=[(b'ADMIN', 'Admin'), (b'BUYER', 'Buyer'), (b'USER', 'User')])),
                ('auth_user', models.OneToOneField(related_name='sm', null=True, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(related_name='users', to='core.Customer')),
            ],
            options={
                'db_table': 'sm_user',
            },
            bases=(models.Model, sm.core.models.CustomerNameMixIn),
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(unique=True, max_length=255, verbose_name=b'Domain Name')),
                ('primary', models.BooleanField(default=False, verbose_name=b'Is Primary')),
                ('org_name', models.CharField(max_length=255, null=True, verbose_name=b'Organization Name', blank=True)),
                ('lang', models.CharField(max_length=31, null=True, verbose_name=b'Language Code', blank=True)),
                ('country', models.CharField(max_length=255, null=True, verbose_name=b'Country Code', blank=True)),
                ('secondary_email', models.CharField(max_length=255, null=True, verbose_name=b'Secondary Email', blank=True)),
                ('users', models.IntegerField(default=0, null=True, verbose_name=b'Users Number', blank=True)),
                ('apps_creation', models.DateTimeField(null=True, verbose_name=b'Apps Creation', blank=True)),
                ('apps_expiry', models.DateTimeField(null=True, verbose_name=b'Apps Expiry', blank=True)),
                ('apps_version', models.CharField(max_length=31, null=True, blank=True)),
                ('max_licenses', models.IntegerField(default=0, null=True, verbose_name=b'Max licenses', blank=True)),
                ('reseller', models.CharField(max_length=1023, null=True, blank=True)),
                ('customer', models.ForeignKey(related_name='vender_profile_set', to='core.Customer')),
            ],
            options={
                'db_table': 'sm_vendor_profile',
            },
            bases=(models.Model, sm.core.models.CustomerNameMixIn),
        ),
        migrations.CreateModel(
            name='VendorProfileClazz',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('product_clazz', models.CharField(max_length=31)),
                ('vendor_profile', models.ForeignKey(to='core.VendorProfile')),
            ],
            options={
                'db_table': 'sm_vendor_profile_clazz',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='catalogs',
            field=models.ManyToManyField(to='core.Catalog', through='core.ProductCatalog'),
        ),
        migrations.AddField(
            model_name='paypalbillingplan',
            name='product_catalog',
            field=models.ForeignKey(related_name='paypal_plan', to='core.ProductCatalog'),
        ),
        migrations.AddField(
            model_name='orderdetail',
            name='product',
            field=models.ForeignKey(related_name='order_details', to='core.Product'),
        ),
        migrations.AddField(
            model_name='orderdetail',
            name='subscription',
            field=models.ForeignKey(related_name='order_details', blank=True, to='core.Subscription', null=True),
        ),
        migrations.AddField(
            model_name='invoicedetail',
            name='product',
            field=models.ForeignKey(related_name='invoice_details', to='core.Product'),
        ),
        migrations.AddField(
            model_name='invoicedetail',
            name='subscription',
            field=models.ForeignKey(related_name='invoice_details', to='core.Subscription'),
        ),
        migrations.AddField(
            model_name='catalog',
            name='products',
            field=models.ManyToManyField(to='core.Product', through='core.ProductCatalog'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together=set([('customer', 'email')]),
        ),
        migrations.AlterUniqueTogether(
            name='productcatalog',
            unique_together=set([('product', 'catalog')]),
        ),
    ]
